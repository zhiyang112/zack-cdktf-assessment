name: Run Integration Tests

on:
  push:
    paths-ignore:
      - "README.md"
    branches:
      - main
  pull_request:
    types: [labeled]
  workflow_dispatch:

jobs:
  run-it-tests-job:
    if: ${{ (github.event_name == 'workflow_dispatch') || (github.event.label.name == 'deploy') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.2"

      - name: Set up Python 3.11
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: "pipenv" # caching pipenv dependencies

      - name: "Set up Poetry"
        uses: abatilo/actions-poetry@v2.1.6
        with:
          poetry-version: 1.2.2

      - name: "Install dependencies"
        run: |
          poetry install

      - name: Install pipenv
        id: install-pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
        shell: bash

      - name: Set up Project
        run: |
          pipenv install

      - name: Start LocalStack
        run: |
          docker pull localstack/localstack
          # Start LocalStack in the background
          LS_LOG=trace pipenv run localstack start -d
          # Wait 30 seconds for the LocalStack container to become ready before timing out
          echo "Waiting for LocalStack startup..."
          pipenv run localstack wait -t 30
          echo "Startup complete"

      - name: Install Terraform Local
        run: |
          pip install terraform-local
          tflocal init

      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install website dependencies
        run: npm --prefix website ci

      ## TODO: Set up CDKTF cli
      - name: Install cdktf
        id: install-cdktf
        run: npm i -g cdktf-cli@0.20.3

      ## TODO: Set up CDKTF cli
      - name: Install tfenv
        id: install-tfenv
        run: |
          git clone https://github.com/tfutils/tfenv.git ${HOME}/.tfenv
          
          export PATH="${HOME}/.tfenv/bin:${PATH}"
          echo 'export PATH="$HOME/.tfenv/bin:$PATH"' >> ${HOME}/.profile

          tfenv install latest

      ## TODO: cdktf synth
      - name: CDKTF synth
        env:
          TERRAFORM_BINARY_NAME: tflocal
        run: |
          cdktf synth

      ## TODO: Deploy Backend with CDKTF
      - name: Deploy Backend with CDKTF
        env:
          TERRAFORM_BINARY_NAME: tflocal
        run: |
          cdktf deploy iac-assignment-backend --auto-approve

      ## TODO: Deploy Frontend with CDKTF
      - name: Deploy Frontend with CDKTF
        env:
          TERRAFORM_BINARY_NAME: tflocal
        run: |
          cdktf deploy iac-assignment-frontend --auto-approve

      - name: Run Tests
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
        run: |
          pipenv run pytest -v tests

      - name: Show localstack logs
        if: always()
        run: |
          pipenv run localstack logs

      - name: Generate a Diagnostic Report
        if: failure()
        run: |
          curl -s localhost:4566/_localstack/diagnose | gzip -cf > diagnose.json.gz

      - name: Upload the Diagnostic Report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: diagnose.json.gz
          path: ./diagnose.json.gz
